@page "/newbuildingList"
@using Realty_Models
@inject HttpClient _httpClient
<h1>Новостройки</h1>
<div>
    <a href="/addnewbuilding"> Новый ЖК</a>
    @if (newbuildingList != null)
    {
        <div class="table-responsive">
            <table class="table-bordered">
                <thead>
                    <tr>
                        <th width="30%">ЖК</th>
                        <th width="5%">Срок</th>
                        <th width="55%">Адрес</th>
                        <th width="30%">Действия</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var row in newbuildingList)
                    {
                        <tr>
                            <td>
                                <b>@row.NameHouse</b> Тип дома: <b>@row.TypeHouse</b><br>
                                Этажность: <b>@row.NumOfStoreys</b> Количество квартир: <b>@row.NumOfApart</b><br>
                                @(row.IsParking ?? false ? "Парковка" : string.Empty)
                            </td>
                            <td>@row.YearOfDelivery</td>
                            <td>@row.Address</td>
                            <td>
                                <a href="/editnewbuilding/@row.Id">Изменить</a>
                                <a href="/deletenewbuilding/@row.Id">Удалить</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <p>Загрузка...</p>
    }
    @if (err.Length>0)
    {
        <div class="alert alert-danger">@err</div>
    }
</div>
@code {
    List<Newbuilding>? newbuildingList;
    string err = string.Empty;
    protected override async Task OnInitializedAsync()
    {
        try
        {
            var response = await _httpClient.GetAsync("api/newbuilding");
            response.EnsureSuccessStatusCode();
            newbuildingList = await response.Content.ReadFromJsonAsync<List<Newbuilding>>();
        }
        catch(Exception ex)
        {
            err = ex.Message;
        }
    }
}