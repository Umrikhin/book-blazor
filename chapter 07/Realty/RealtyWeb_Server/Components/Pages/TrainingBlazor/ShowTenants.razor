@page "/trainingblazor/showTenants"

<h2 class="text-primary">Наниматели</h2>
<p>Всего постоянных клиентов: @SelectedRegularCustomerCount</p>
<p>Последний выбранный наниматель: @LastTenant</p>
<div class="row border bg-light">
    @foreach (var row in tenants)
    {
        <_SeparateTenant row="row" OnRegularCustomerSelection="@RegularCustomerCountChange" OnClickedTenant="@ClickedTenant">
            <StringFirst><b>1</b></StringFirst>
            <StringSecond>2</StringSecond>
        </_SeparateTenant>
    }
</div>

@code {
    private int SelectedRegularCustomerCount { get; set; } = 0;
    private string LastTenant { get; set; } = string.Empty;
    List<Tenant> tenants = new List<Tenant>()
    {
        new Tenant()
        {
            Id = 1,
            Fio = "Иванов Алексей Владимирович",
            Dr = DateTime.Parse("01.12.1980", CultureInfo.GetCultureInfo("ru")),
            DateContract = DateTime.Parse("10.10.2023", CultureInfo.GetCultureInfo("ru")),
            Commission = 12000.50d,
            IsSend = true,
            Phones = new List<Phone>()
            {
                new Phone() { Id = 1, TypePhone = "Мобильный", NumberPhone = "+79184003080" },
                new Phone() { Id = 2, TypePhone = "Домашний", NumberPhone = "2607060" },
                new Phone() { Id = 3, TypePhone = "Рабочий", NumberPhone = "2355050" }
            }
        },
        new Tenant()
        {
            Id = 2,
            Fio = "Кузнецова Анна Петровна",
            Dr = DateTime.Parse("20.10.1985", CultureInfo.GetCultureInfo("ru")),
            DateContract = DateTime.Parse("15.03.2024", CultureInfo.GetCultureInfo("ru")),
            Commission = 14000.15d,
            IsSend = true,
            Phones = new List<Phone>()
            {
                new Phone() { Id = 1, TypePhone = "Мобильный", NumberPhone = "+79096007070" },
                new Phone() { Id = 2, TypePhone = "Домашний", NumberPhone = "2601050" },
                new Phone() { Id = 3, TypePhone = "Рабочий", NumberPhone = "2552040" }
            }
        }
    };

    protected void RegularCustomerCountChange(bool isSelected)
    {
        if (isSelected)
        {
            SelectedRegularCustomerCount++;
        }
        else
        {
            SelectedRegularCustomerCount--;
        }
    }

    protected void ClickedTenant(string tenant)
    {
        LastTenant = tenant;
    }
}
