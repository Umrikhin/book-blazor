@page "/house"
@inject IHouseRepository _houseRepository
@inject IRegionRepository _regionRepository
@inject IJSRuntime _JS
@inject IFileWork _fileWork

<_RemoveConfirmation IsProcessRunning="IsLoading" ConfirmationChanged="ConfirmRemove_Click"></_RemoveConfirmation>
<div class="row mt-4">
    <div class="col-6">
        <h4 class="card-title text-primary">Список домов</h4>
    </div>
    <div class="col-4 offset-2">
        <a href="house/create" class="btn btn-primary form-control">Новый дом</a>
    </div>
    <div class="col-12 p-3">
        @if (Houses.Any())
        {
            <div class="table-responsive">
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>Лот</th>
                            <th>Эксклюзив</th>
                            <th>Ипотека</th>
                            <th>Регион</th>
                            <th>Адрес</th>
                            <th>Действия</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Houses)
                        {
                            <tr>
                                <td>
                                    @item.Lot
                                </td>
                                <td>
                                    <input type="checkbox" disabled checked="@item.IsExclusive" />
                                </td>
                                <td>
                                    <input type="checkbox" disabled checked="@item.IsMortagege" />
                                </td>
                                <td>
                                    @Regions.Where(x => x.Id == item.RegionId)?.FirstOrDefault()?.Nm
                                </td>
                                <td>
                                    @item.Address
                                </td>
                                <td>
                                    <NavLink href="@($"house/edit/{item.Id}")" class="btn btn-info m-1">Изменить</NavLink>
                                    <button class="btn btn-danger m-1" @onclick="()=>HandleRemove(item.Id)">Удалить</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            if (IsLoading)
            {
                <div class="text-center">
                    <img src="images/loading.gif" />
                </div>
            }
            else
            {
                <p>Записей не найдено.</p>
            }
        }
    </div>
</div>

@code {
    private IEnumerable<Region> Regions { get; set; } = new List<Region>();
    private IEnumerable<House> Houses { get; set; } = new List<House>();
    private bool IsLoading { get; set; } = true;
    public int RemoveHouseId { get; set; } = 0;

    protected override async Task OnInitializedAsync()
    {
        await LoadHouses();
    }

    private async Task LoadHouses()
    {
        Regions = await _regionRepository.GetAll();
        Houses = await _houseRepository.GetAll();
        IsLoading = false;
    }

    private void HandleRemove(int id)
    {
        RemoveHouseId = id;
        _JS.InvokeVoidAsync("ShowRemoveConfirmationModal");
    }

    private async Task ConfirmRemove_Click(bool isErase)
    {
        IsLoading = true;
        if (isErase && RemoveHouseId > 0)
        {
            House house = await _houseRepository.Get(RemoveHouseId);
            if (!string.IsNullOrEmpty(house.ImageUrl))
                if (!house.ImageUrl.Contains("default.png"))
                {
                    _fileWork.DeleteFile(house.ImageUrl);
                }
            await _houseRepository.Delete(RemoveHouseId);
            await _JS.NotyfSuccess("Дом удален успешно");
            await _houseRepository.GetAll();
            await _JS.InvokeVoidAsync("HideRemoveConfirmationModal");
        }
        IsLoading = false;
    }
}
